@model KreditrechnerLAP.web.Models.PersoenlicheDatenModel

@{
    ViewBag.Title = "PersoenlicheDaten";
}
<h1>Persönlichedaten</h1>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x=>x.ID_Kunde)
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
                @Html.LabelFor(model => model.Geschlecht, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.Geschlecht, "Bitte Wählen", new{ htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Geschlecht, "", new { @class = "text-danger" })
            </div>
         </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ID_Titel, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ID_Titel, new SelectList(Model.AlleTitelAngaben, "ID", "Bezeichnung") , "Bitte Wählen",  new{ htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_Titel, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Vorname, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Vorname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Vorname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nachname, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Nachname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nachname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GeburtsDatum, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @if (Model.GeburtsDatum == null)
                {
                @Html.EditorFor(model => model.GeburtsDatum, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "datepicker1 breite48", @id = "datepicker1", onchange = "ueber18()", @style = "width:48%;", @value = DateTime.Now.Date } })
                }
                else
                {
                    @Html.EditorFor(model => model.GeburtsDatum, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "datepicker1 breite48", @id = "datepicker1", onchange = "ueber18()", @style = "width:48%;"} })
                }
                    @Html.ValidationMessageFor(model => model.GeburtsDatum, "", new { @class = "text-danger" })
                <span id="display_error" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID_Staatsbuergerschaft, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ID_Staatsbuergerschaft, new SelectList(Model.AlleStaatsbuergerschaftsAngaben , "ID", "Bezeichnung"), "Bitte Wählen", new { htmlAttributes = new { @class = "form-control", @style= "width:48%;" } })
                @Html.ValidationMessageFor(model => model.ID_Staatsbuergerschaft, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnzahlUnterhaltspflichtigeKinder, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.AnzahlUnterhaltspflichtigeKinder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnzahlUnterhaltspflichtigeKinder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID_Familienstand, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ID_Familienstand,new SelectList(Model.AlleFamilienStandAngaben, "ID" , "Bezeichnung"), "Bitte Wählen", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_Familienstand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID_Wohnart, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ID_Wohnart, new SelectList(Model.AlleWohnartAngaben, "ID", "Bezeichnung"), "Bitte Wählen", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_Wohnart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID_Bildung, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ID_Bildung, new SelectList(Model.AlleBildungAngaben , "ID", "Bezeichnung"), "Bitte Wählen", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_Bildung, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID_Identifikationsart, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.ID_Identifikationsart, new SelectList(Model.AlleIdentifikationsAngaben , "ID", "Bezeichnung"), "Bitte Wählen", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID_Identifikationsart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdentifikationsNummer, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IdentifikationsNummer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdentifikationsNummer, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Weiter" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Abbrechen", "Index")
</div>

@section Scripts {

<script>

    $(document).ready(function(){
         var dateNow = new Date();
         $('.datepicker1').datepicker({
             language: 'de',
            format: 'yyyy-mm-dd',
         });


    })

    function ueber18() {
        var gebJahr = document.getElementById("datepicker1").value.substring(0, 4);
        var gebmonat = document.getElementById("datepicker1").value.substring(5,7);
        var gebtag = document.getElementById("datepicker1").value.substring(8,10);
        var mindestalter = @DateTime.Now.Year -18;
        var monat = @DateTime.Now.Month;
        var tag = @DateTime.Now.Day;

        if (gebJahr > mindestalter) {
            if(gebmonat <= monat){
                if( gebtag <= tag){
                    $('#display_error').html('Mindestalter 18 Jahre');
                    
                    }
            }
            

        }
        else {
            $('#display_error').html('');
        }
        console.log(monat +' '+ gebmonat + ' '+ gebtag);
    }




</script>
@Scripts.Render("~/bundles/jqueryval")
}